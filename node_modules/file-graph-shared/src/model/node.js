const $ = require('jquery');
const _ = require('lodash');

const ListenableObject = require('../listenable-object');

class Node extends ListenableObject {
    constructor(id, name, { tags = [], constantAttributes = {} } = {}) {
        super();
        this.id = id;
        this.name = name;
        this.tags = tags;
        this.constantAttributes = constantAttributes;

        this.set('selected', false);
    }

    save() {
        return new Promise((res, rej) => {
            $.ajax({
                type: 'POST',
                url: `/file?file=${JSON.stringify(this.toJSON())}`,
                dataType: 'json',
                success: res,
                contentType: 'application/json'
            });
        })
            .then(data => this.emitEvent('updated', data));
    }

    static fromJSON(json, tagCollection) {
        const tags = json.tags.map(tagName => tagCollection.getTagForName(tagName));
        const constantAttributes = json.constantAttributes;
        return new Node(json.id, json.name, { tags, constantAttributes });
    }

    toJSON() {
        return _.pick(this, ['id', 'name', 'tags', 'constantAttributes']);
    }

    get selected() {
        return this.get('selected');
    }

    set selected(isSelected) {
        this.set('selected', isSelected);
    }

    deselect() {
        this.set('selected', false);
    }

    get highlighted() {
        return this.get('highlighted');
    }

    set highlighted(isHighlighted) {
        this.set('highlighted', isHighlighted);
    }
}

module.exports = Node;